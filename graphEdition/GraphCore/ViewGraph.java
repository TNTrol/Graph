package graphEdition.GraphCore;

/**
 * Интерфейс визуальной состовляющей графа, данный интерфейс нужен для взаимодействия пользователя и графа
 * @param <T> Тип вершины графа
 * @param <E> Тип ребер графа
 * @param <G> Тип объектна, с помощью которого будет производится отрисовка
 */
public interface ViewGraph<T, E, G>
{
    /**
     * Метод для проверки принадлежности точки к ребру
     * @param x1 х состовляющая первой точки ребра
     * @param y1 у состовляющая первой точки ребра
     * @param x2 х состовляющая второй точки ребра
     * @param y2 у состовляющая второй точки ребра
     * @param x х состовляющая точки для проврки
     * @param y у состовляющая точки для проврки
     * @return
     */
    boolean checkEdge(int x1, int y1, int x2, int y2, int x, int y);

    /**
     * Метод для проверки принадлежности точки к вершине
     * @param x1 х состовляющая вершины
     * @param y1 у состовляющая вершины
     * @param x х состовляющая точки
     * @param y у состовляющая точки
     * @return
     */
    boolean checkPoint(int x1, int y1, int x, int y);

    /**
     * Метод отрисовки ребра
     * @param x1 х состовляющая первой точки ребра
     * @param y1 у состовляющая первой точки ребра
     * @param x2 х состовляющая второй точки ребра
     * @param y2 у состовляющая второй точки ребра
     * @param start индекс первой вершины ребра
     * @param end индекс второй вершины ребра
     * @param g Объект для визуализации
     */
    void drawEdge(int x1, int y1, int x2, int y2, int start, int end, G g);

    /**
     * Метод для визуализации вершины графа
     * @param x х состовляющая первой точки ребра
     * @param y у состовляющая первой точки ребра
     * @param number индекс вершины
     * @param g Объект для визуализации
     */
    void drawTop(int x, int y, int number, G g);

    /**
     * Метод, который вызывается при создании новой вершины
     * @param i будущий индекс новой вершины
     * @return
     */
    T addValueToTop(int i);

    /**
     * Метод, который вызывается при создании новой вершины
     * @param i индекс первой вершины будущего ребра
     * @param j индекс второй вершины будущего ребра
     * @return
     */
    E addValueToEdge(int i, int j);

    /**
     * Метод, который вызывается для того, чтобы показать на какую вершину нажали
     * @param i индекс вершины
     */
    void showTop(int i);

    /**
     * Метод, который вызывается для того, чтобы показать на какое ребро нажали
     * @param i индекс первой вершины ребра
     * @param j индекс второй вершины ребра
     */
    void showEdge(int i, int j);

}
